plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.161'
}

version = "0.6.1"
group= "dev.gigaherz.hudcompass"

var  minecraftVersion = project.userDevRuntime.runtimes.map(r -> r.values().first().specification.minecraftVersion)
base {
    archivesName = minecraftVersion.map { "HudCompass-${it}" }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    flatDir { dirs 'deps' }
}

runs {
    // applies to all the run configs below
    configureEach {
        systemProperty 'forge.logging.markers', '' // 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        workingDirectory project.file('run')

        modSource project.sourceSets.main
    }

    client {
    }

    client2 {
        configure "client"

        arguments '--username', 'gigaherz', '--user', 'gigaherz', '--uuid', '67752848-2bae-4c88-ae42-150fab05fea8'
    }

    server {
    }

    data {
        arguments '--mod', 'hudcompass', '--all', '--output', file('src/main/generated_resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

subsystems {
    parchment {
        minecraftVersion="1.21"
        mappingsVersion="2024.06.23"
    }
}

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

dependencies {
    implementation 'net.neoforged:neoforge:21.1.21'

    compileOnly 'flatdir:journeymap-api-neoforge:2.0.0-1.21.1-SNAPSHOT'
    compileOnly 'flatdir:journeymap-neoforge:1.21.1-6.0.0-beta.28'
    runtimeOnly 'flatdir:journeymap-neoforge:1.21.1-6.0.0-beta.28'
}

jar {
    from('/') {
        include 'LICENSE.txt'
    }

    manifest {
        attributes([
                "Specification-Title": "eyes",
                "Specification-Vendor": "gigaherz",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"gigaherz",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
